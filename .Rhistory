q()
x=c(2,5,7)
x=(2,5,7)
x=c(2,5,7)
x
# fff
y=seq(from=4, length=3,by=3)
y
?seq
?c
x+y
x.y
x.+y
x.*y
x*y
x^y
x^2
x[2]
x[2:3]
fix(x)
x[0:]
x[0:3]
x[-1:3]
x[0:-2]
x[0:-1]
x[0:-2]
x[0:-3]
x[0:1]
x[0:2]
source('~/.active-rstudio-document', echo=TRUE)
x[0:-1]
x[1]
x[0]
x[1]
x[2]
x[4]
x[7]
x[3]
x[-1]
x[-c(1,2)]
x[-c(1)]
z=martix(seq(1,12),4,3)
?matrix
z=martix(seq(1,12),4,3)
z=martix(seq(1,12),4,3)
?matrix
z=matrix(seq(1,12),4,3)
View(z)
View(z)
View(z)
z[3:4, 2:3]
z[, 2:3]
z[, 1]
z[1,]
?dim
dim(x)
dim(z)
ls()
rm(y)
x=runif(50)
x
?runif
y=rnorm(50)
fix(y)
plot(x,u)
plot(x,y)
plot(x)
plot(x)
plot(y)
plot(x,y)
plot(x,y,xlab="嘿嘿", ylab="嘻嘻",pch="*", col="red")
plot(x,y,xlab="嘿嘿", ylab="嘻嘻",pch="a", col="red")
plot(x,y,xlab="嘿嘿", ylab="嘻嘻",pch="哈", col="red")
plot(x,y,xlab="嘿嘿", ylab="嘻嘻",pch="x", col="red")
?plot
par(mfrow=c(2,1))
?par
plot(x,y)
par(mfrow=c(3,1))
plot(x,y)
par(mfrow=c(3,2))
plot(x,y)
par(mfrow=c(1,1))
plot(x,y)
par(mfrow=c(2,1))
plot(x,y)
par(mfrow=c(1,1))
plot(x,y)
par(mfrow=c(1,0.5))
hist(x,y)
auto = read.csv("~/city_bound.csv")
name(auto)
class(auto)
dim(auto)
class(auto)
dim(auto)
names(auto)
summary(auto)
plot(auto)
plot(auto$cylinders,auto$mpg)
names(auto)
plot(auto$X1,auto$X0)
attach(auto)
?attach
search()
plot(X0,X1)
X0=as.factor(X0)
X0=as.factor(X0)
plot(X0,X1)
X0=as.factor(X0)
install_github('slidify', 'ramnathv')
install_github('slidifyLibraries', 'ramnathv')
install_github('slidify', 'ramnathv')
install.packages("devtools")
install_github('slidify', 'ramnathv')
install_github('slidifyLibraries', 'ramnathv')
install.packages("devtools")
install_github('slidify', 'ramnathv')
library("devtools", lib.loc="/home/sam/R/x86_64-unknown-linux-gnu-library/3.1")
install_github('slidify', 'ramnathv')
install_github('slidifyLibraries', 'ramnathv')
library("slidify", lib.loc="/home/sam/R/x86_64-unknown-linux-gnu-library/3.1")
library("slidifyLibraries", lib.loc="/home/sam/R/x86_64-unknown-linux-gnu-library/3.1")
library("slidify", lib.loc="/home/sam/R/x86_64-unknown-linux-gnu-library/3.1")
library("slidifyLibraries", lib.loc="/home/sam/R/x86_64-unknown-linux-gnu-library/3.1")
library("slidify", lib.loc="/home/sam/R/x86_64-unknown-linux-gnu-library/3.1")
library("slidifyLibraries", lib.loc="/home/sam/R/x86_64-unknown-linux-gnu-library/3.1")
library("slidify", lib.loc="/home/sam/R/x86_64-unknown-linux-gnu-library/3.1")
library("slidifyLibraries", lib.loc="/home/sam/R/x86_64-unknown-linux-gnu-library/3.1")
library("slidify", lib.loc="/home/sam/R/x86_64-unknown-linux-gnu-library/3.1")
library("slidifyLibraries", lib.loc="/home/sam/R/x86_64-unknown-linux-gnu-library/3.1")
Observables fill the gap by being the ideal way to access asynchronous sequences of multiple items
library("slidifyLibraries", lib.loc="/home/sam/R/x86_64-unknown-linux-gnu-library/3.1")
library("slidify", lib.loc="/home/sam/R/x86_64-unknown-linux-gnu-library/3.1")
library("slidifyLibraries", lib.loc="/home/sam/R/x86_64-unknown-linux-gnu-library/3.1")
library("slidify", lib.loc="/home/sam/R/x86_64-unknown-linux-gnu-library/3.1")
library("slidify", lib.loc="/home/sam/R/x86_64-unknown-linux-gnu-library/3.1")
library("slidifyLibraries", lib.loc="/home/sam/R/x86_64-unknown-linux-gnu-library/3.1")
library("slidify", lib.loc="/home/sam/R/x86_64-unknown-linux-gnu-library/3.1")
library("slidifyLibraries", lib.loc="/home/sam/R/x86_64-unknown-linux-gnu-library/3.1")
library("slidify", lib.loc="/home/sam/R/x86_64-unknown-linux-gnu-library/3.1")
library("slidifyLibraries", lib.loc="/home/sam/R/x86_64-unknown-linux-gnu-library/3.1")
publish(user = 'misgod', repo = 'Slide-FRP-Android')
publish(user='misgod', repo='Slide-FRP-Android')
slidify('index.Rmd')
publish(user='misgod', repo='Slide-FRP-Android')
publish(user='misgod', repo='Slide-FRP-Android')
publish(user=misgod, repo=Slide-FRP-Android)
Slidify(index.Rmd)
slidify(index.Rmd)
slidify('index.Rmd')
setwd('/home/sam/git/FRP_on_Android')
slidify('index.Rmd')
publish(user=misgod, repo=Slide-FRP-Android)
publish(user='misgod', repo='Slide-FRP-Android')
